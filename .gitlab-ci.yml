stages:
    - test
    - build
    - deploy

variables:
    CI_REGISTRY_IMAGE: $REGISTRY_URL/$REGISTRY_PACKAGE:$CI_COMMIT_SHA
    CI_PROJECT_NAME: scraper

test:
    image: node:8-alpine
    stage: test
    script:
        - apk add --no-cache make gcc g++ python
        - npm config set //npm.api.haus/:_authToken ${NPM_TOKEN}
        - yarn install
        - yarn test
    only:
        changes:
            - src/**/*
            - test/**/*
            - config/**/*
            - package.json

build:
    image: docker:stable
    stage: build
    services:
        - docker:dind
    script:
        - docker login --username=$REGISTRY_USER --password=$REGISTRY_PASSWORD $REGISTRY_URL
        - docker build --build-arg npm_token=${NPM_TOKEN} --pull -t "$CI_REGISTRY_IMAGE" .
        - docker push "$CI_REGISTRY_IMAGE"
    only:
        refs:
            - master
        changes:
            - src/**/*
            - test/**/*
            - config/**/*
            - package.json
            - Dockerfile
            - .dockerignore
            - rollup.config.js
            - obfuscate.config.json
            - .babelrc
            - kubernetes.tpl.yml
            - .gitlab-ci.yml

deploy:
    stage: deploy
    image: alpine
    environment:
        name: develop
    script:
        - apk add --no-cache curl
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - mv ./kubectl /usr/local/bin/kubectl
        - kubectl config set-cluster kubernetes --server="$KUBE_URL" --insecure-skip-tls-verify=true
        - kubectl config set-credentials kubernetes-admin --token="$KUBE_TOKEN"
        - kubectl config set-context default --cluster=kubernetes --user=kubernetes-admin
        - kubectl config use-context default
        - 'printf "apiVersion: v1\nkind: Secret\n$(kubectl create secret docker-registry gitlab-registry --docker-server=$REGISTRY_URL --docker-username=$REGISTRY_USER --docker-password=$REGISTRY_PASSWORD --docker-email=$REGISTRY_EMAIL -o yaml --dry-run)" | kubectl apply -f -'
        - sed 's/_APP_NAME_/'"$CI_PROJECT_NAME"'/g; s/_REGISTRY_IMAGE_/'${CI_REGISTRY_IMAGE//\//\\\/}'/g; s/_JWT_SECRET_/'"$JWT_SECRET"'/g; s/_DISCOVERY_HOST_/'"$DISCOVERY_HOST"'/g; s/_DISCOVERY_PORT_/'"$DISCOVERY_PORT"'/g; s/_DISCOVERY_TOKEN_/'"$DISCOVERY_TOKEN"'/g; s/_RESOURCE_BROKER_TOKEN_/'"$RESOURCE_BROKER_TOKEN"'/g' kubernetes.tpl.yml > kubernetes.yml;
        - kubectl apply -f kubernetes.yml
    only:
        refs:
            - master
        changes:
            - src/**/*
            - test/**/*
            - config/**/*
            - package.json
            - Dockerfile
            - .dockerignore
            - rollup.config.js
            - obfuscate.config.json
            - .babelrc
            - kubernetes.tpl.yml
            - .gitlab-ci.yml
